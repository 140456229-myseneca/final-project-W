name: Deploy to ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: us-east-1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::673896343304:role/LabRole  
          role-skip-session-tagging: true

      - name: Build, test, tag, and push app image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_APP: project-app
          IMAGE_TAG_APP: v1.2
          DBHOST: ${{ secrets.DBHOST }}
          DBPORT: ${{ secrets.DBPORT }}
          DBUSER: ${{ secrets.DBUSER }}
          DBPWD: ${{ secrets.DBPWD }}
          BACKGROUND_IMAGE: 'https://project-s3-g4.s3.amazonaws.com/PJpicture.jpg'
        run: |
          cd docker
          
          # Set variables
          export DBHOST=172.17.0.2
          export DBPORT=3306
          export DBUSER=root
          export DATABASE=employees
          export DBPWD=pw
          export BACKGROUND_IMAGE=https://project-s3-g4.s3.amazonaws.com/PJpicture.jpg
          
          # Docker build for app image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG_APP -f Dockerfile \
            --build-arg DBHOST=$DBHOST \
            --build-arg DBPORT=$DBPORT \
            --build-arg DBUSER=$DBUSER \
            --build-arg DBPWD=$DBPWD \
            --build-arg BACKGROUND_IMAGE=$BACKGROUND_IMAGE .
          
          # Unit test
          docker run -p 8080:8080 -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e DBUSER=$DBUSER -e DBPWD=$DBPWD -e BACKGROUND_IMAGE='https://project-s3-g4.s3.amazonaws.com/PJpicture.jpg' $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG_APP
          
          docker ps
          
          echo "Pause for 10 seconds to let container start"
          sleep 10
          
          curl localhost:8080
          
          # Docker push 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG_APP
